resources:
- name: pcf-automation-tasks
  type: s3
  source:
    access_key_id: ((s3_accesskey))
    secret_access_key: ((s3_secretkey))
    endpoint: ((s3_url))
    bucket: pivnet-products
    regexp: automation/.*tasks-(.*).zip

- name: pcf-automation-image
  type: s3
  source:
    access_key_id: ((s3_accesskey))
    secret_access_key: ((s3_secretkey))
    endpoint: ((s3_url))
    bucket: pivnet-products
    regexp: automation/.*image-(.*).tgz

- name: ((pivnet_product))-product
  type: s3
  source:
    access_key_id: ((s3_accesskey))
    secret_access_key: ((s3_secretkey))
    endpoint: ((s3_url))
    bucket: pivnet-products
    regexp: ((pivnet_product))/((product_file_versioned_regexp))

- name: ((pivnet_product))-stemcell
  type: s3
  source:
    access_key_id: ((s3_accesskey))
    secret_access_key: ((s3_secretkey))
    endpoint: ((s3_url))
    bucket: pivnet-products
    regexp: ((pivnet_product))/((stemcell_file_versioned_regexp))

# configurations

- name: configuration
  type: git
  source:
    private_key: ((git_private_key.private_key))
    uri: ((config_git_repo_url))
    branch: master
    paths:
    - '**/((pivnet_product)).yml'

# resource locking

- name: environment-lock
  type: pool
  source:
    private_key: ((git_private_key.private_key))
    uri: ((state_git_repo_url))
    branch: master
    pool: locks/foundations/((foundation_name))

# common tasks

locks:
# lock foundation
- &lock-environment
  put: environment-lock
  params: {claim: opsman}
# unlock foundation
- &unlock-environment
  put: environment-lock
  params: {release: environment-lock}

# jobs pipeline

jobs:
- name: upload-and-stage-((pivnet_product))
  serial: true
  plan:
  - *lock-environment

  - aggregate:
    - get: pcf-automation-image
      params:
        unpack: true
    - get: pcf-automation-tasks
      params:
        unpack: true
    - get: configuration
    - get: ((pivnet_product))-product
      trigger: true

  - task: credhub-interpolate
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_SERVER: ((credhub_url))
      CREDHUB_CLIENT: ((credhub_client_id))
      CREDHUB_SECRET: ((credhub_client_secret))
      CREDHUB_CA_CERT: ((default_ca.ca))
      PREFIX: '/pcf/((foundation_name))'
      INTERPOLATION_PATH: "foundations/((foundation_name))"
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: interpolated-configs

  - task: upload-product
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/upload-product.yml
    input_mapping:
      env: interpolated-configs
      product: ((pivnet_product))-product
    params:
      ENV_FILE: foundations/((foundation_name))/env/env.yml
      
  - task: stage-product
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/stage-product.yml
    input_mapping:
      env: interpolated-configs
      product: ((pivnet_product))-product
    params:
      ENV_FILE: foundations/((foundation_name))/env/env.yml

  ensure: *unlock-environment

- name: configure-((pivnet_product))
  serial: true
  plan:
  - *lock-environment

  - aggregate:
    - get: pcf-automation-image
      params:
        unpack: true
    - get: pcf-automation-tasks
      params:
        unpack: true
    - get: configuration
      trigger: true
    - get: ((pivnet_product))-product
      trigger: true
      passed:
      - upload-and-stage-((pivnet_product))

  - task: credhub-interpolate
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_SERVER: ((credhub_url))
      CREDHUB_CLIENT: ((credhub_client_id))
      CREDHUB_SECRET: ((credhub_client_secret))
      CREDHUB_CA_CERT: ((default_ca.ca))
      PREFIX: '/pcf/((foundation_name))'
      INTERPOLATION_PATH: "foundations/((foundation_name))"
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: interpolated-configs

  - task: configure-((pivnet_product))
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: configuration
      vars: interpolated-configs
      env: interpolated-configs
    params:
      ENV_FILE: foundations/((foundation_name))/env/env.yml
      VARS_FILES: vars/foundations/((foundation_name))/vars/((pivnet_product)).yml
      CONFIG_FILE: templates/((pivnet_product)).yml

  ensure: *unlock-environment

- name: upload-stemcell
  serial: true
  plan:
  - aggregate:
    - get: pcf-automation-image
      params:
        unpack: true
    - get: pcf-automation-tasks
      params:
        unpack: true
    - get: configuration
    - get: ((pivnet_product))-stemcell
      trigger: true

  - task: credhub-interpolate
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_SERVER: ((credhub_url))
      CREDHUB_CLIENT: ((credhub_client_id))
      CREDHUB_SECRET: ((credhub_client_secret))
      CREDHUB_CA_CERT: ((default_ca.ca))
      PREFIX: '/pcf/((foundation_name))'
      INTERPOLATION_PATH: "foundations/((foundation_name))"
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: interpolated-configs

  - task: upload-((pivnet_product))-stemcell
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/upload-stemcell.yml
    input_mapping:
      env: interpolated-configs
      stemcell: ((pivnet_product))-stemcell
    params:
      ENV_FILE: foundations/((foundation_name))/env/env.yml

- name: apply-changes
  serial: true
  plan:
  - *lock-environment

  - aggregate:
    - get: pcf-automation-image
      params:
        unpack: true
    - get: pcf-automation-tasks
      params:
        unpack: true
    - get: configuration
      trigger: true
      passed:
      - configure-((pivnet_product))
    - get: ((pivnet_product))-product
      trigger: true
      passed:
      - configure-((pivnet_product))
    - get: ((pivnet_product))-stemcell
      trigger: true
      passed:
      - upload-stemcell

  - task: credhub-interpolate
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_SERVER: ((credhub_url))
      CREDHUB_CLIENT: ((credhub_client_id))
      CREDHUB_SECRET: ((credhub_client_secret))
      CREDHUB_CA_CERT: ((default_ca.ca))
      PREFIX: '/pcf/((foundation_name))'
      INTERPOLATION_PATH: "foundations/((foundation_name))"
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: interpolated-configs

  - task: apply-director-changes
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/apply-changes.yml
    input_mapping:
      env: interpolated-configs
    params:
      ENV_FILE: foundations/((foundation_name))/env/env.yml

  ensure: *unlock-environment
