resources:
- name: pcf-automation-tasks
  type: s3
  source:
    access_key_id: ((s3_accesskey))
    secret_access_key: ((s3_secretkey))
    endpoint: ((s3_url))
    bucket: pivnet-products
    regexp: .*tasks-(.*).zip

- name: pcf-automation-image
  type: s3
  source:
    access_key_id: ((s3_accesskey))
    secret_access_key: ((s3_secretkey))
    endpoint: ((s3_url))
    bucket: pivnet-products
    regexp: .*image-(.*).tgz

- name: pas-stemcell
  type: s3
  source:
    access_key_id: ((s3_accesskey))
    secret_access_key: ((s3_secretkey))
    endpoint: ((s3_url))
    bucket: pivnet-products
    regexp: pas/((bosh_stemcell_s3_versioned_regexp))

- name: pas-product
  type: s3
  source:
    access_key_id: ((s3_accesskey))
    secret_access_key: ((s3_secretkey))
    endpoint: ((s3_url))
    bucket: pivnet-products
    regexp: pas/((pas_tile_s3_versioned_regexp))

# configurations

- name: configuration
  type: git
  source:
    private_key: ((config_git_repo_key.private_key))
    uri: ((config_git_repo_url))
    branch: master

# triggers used to have jobs do something in a timely manner

- name: one-time-trigger
  type: time
  source:
    interval: 999999h

- name: daily-trigger
  type: time
  source:
    interval: 24h

jobs:
- name: upload-and-stage-pas
  serial: true
  plan:
  - aggregate:
    - get: pcf-automation-image
      params:
        unpack: true
    - get: pcf-automation-tasks
      params:
        unpack: true
    - get: configuration
    - get: pas-product

  - task: credhub-interpolate
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_SERVER: ((credhub_url))
      CREDHUB_CLIENT: ((credhub_client_id))
      CREDHUB_SECRET: ((credhub_client_secret))
      CREDHUB_CA_CERT: ((default_ca.ca))
      PREFIX: '/pcf/((foundation_name))'
      INTERPOLATION_PATH: "foundations/((foundation_name))"
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: interpolated-configs

  - task: upload-product
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/upload-product.yml
    input_mapping:
      env: interpolated-configs
      product: pas-product
    params:
      ENV_FILE: foundations/((foundation_name))/env/env.yml
      
  - task: stage-product
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/stage-product.yml
    input_mapping:
      env: interpolated-configs
      product: pas-product
    params:
      ENV_FILE: foundations/((foundation_name))/env/env.yml

- name: configure-pas
  serial: true
  plan:
  - aggregate:
    - get: pcf-automation-image
      params:
        unpack: true
    - get: pcf-automation-tasks
      params:
        unpack: true
    - get: configuration
    - get: pas-product
      trigger: true
      passed:
      - upload-and-stage-pas

  - task: credhub-interpolate
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_SERVER: ((credhub_url))
      CREDHUB_CLIENT: ((credhub_client_id))
      CREDHUB_SECRET: ((credhub_client_secret))
      CREDHUB_CA_CERT: ((default_ca.ca))
      PREFIX: '/pcf/((foundation_name))'
      INTERPOLATION_PATH: "foundations/((foundation_name))"
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: interpolated-configs

  - task: configure-pas
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: configuration
      vars: interpolated-configs
      env: interpolated-configs
    params:
      ENV_FILE: foundations/((foundation_name))/env/env.yml
      VARS_FILES: vars/foundations/((foundation_name))/vars/director.yml
      CONFIG_FILE: ((foundation-name))/pas.yml
      
- name: upload-stemcell
  serial: true
  plan:
  - aggregate:
    - get: pcf-automation-image
      params:
        unpack: true
    - get: pcf-automation-tasks
      params:
        unpack: true
    - get: configuration
    - get: pas-stemcell

  - task: credhub-interpolate
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_SERVER: ((credhub_url))
      CREDHUB_CLIENT: ((credhub_client_id))
      CREDHUB_SECRET: ((credhub_client_secret))
      CREDHUB_CA_CERT: ((default_ca.ca))
      PREFIX: '/pcf/((foundation_name))'
      INTERPOLATION_PATH: "foundations/((foundation_name))"
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: interpolated-configs

  - task: upload-pas-stemcell
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/upload-stemcell.yml
    input_mapping:
      env: interpolated-configs
      stemcell: pas-stemcell
    params:
      ENV_FILE: foundations/((foundation_name))/env/env.yml

  - task: upload-healthwatch-stemcell
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/upload-stemcell.yml
    input_mapping:
      env: interpolated-configs
      stemcell: healthwatch-stemcell
    params:
      ENV_FILE: foundations/((foundation_name))/env/env.yml

- name: apply-changes
  serial: true
  plan:
  - aggregate:
    - get: pcf-automation-image
      params:
        unpack: true
    - get: pcf-automation-tasks
      params:
        unpack: true
    - get: pas-product
      passed:
      - configure-pas
    - get: pas-stemcell
      passed:
      - upload-stemcell

  - task: credhub-interpolate
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_SERVER: ((credhub_url))
      CREDHUB_CLIENT: ((credhub_client_id))
      CREDHUB_SECRET: ((credhub_client_secret))
      CREDHUB_CA_CERT: ((default_ca.ca))
      PREFIX: '/pcf/((foundation_name))'
      INTERPOLATION_PATH: "foundations/((foundation_name))"
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: interpolated-configs

  - task: apply-director-changes
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/apply-director-changes.yml
    input_mapping:
      env: interpolated-configs
    params:
      ENV_FILE: ((foundation_name))/config/env.yml
